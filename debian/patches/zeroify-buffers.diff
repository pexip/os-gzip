Description: clear gzip buffers between files
 When compressing multiple files on the commandline, empty the buffers in
 between each file to guard against small permutations in the resulting
 compressed files.
Author: Cyril Brulebois <kibi@debian.org>
Bug-Debian: http://bugs.debian.org/647522
Bug-Ubuntu: https://bugs.launchpad.net/bugs/871083

Index: trunk/gzip.c
===================================================================
--- trunk.orig/gzip.c
+++ trunk/gzip.c
@@ -561,6 +561,19 @@
 	    SET_BINARY_MODE(fileno(stdout));
 	}
         while (optind < argc) {
+
+	    /* Make sure buffers are reset to 0 to ensure reproducibility when handling several files */
+	    ZEROIFY(uch, inbuf,  INBUFSIZ +INBUF_EXTRA);
+	    ZEROIFY(uch, outbuf, OUTBUFSIZ+OUTBUF_EXTRA);
+	    ZEROIFY(ush, d_buf,  DIST_BUFSIZE);
+	    ZEROIFY(uch, window, 2L*WSIZE);
+#ifndef MAXSEG_64K
+	    ZEROIFY(ush, tab_prefix, 1L<<BITS);
+#else
+	    ZEROIFY(ush, tab_prefix0, 1L<<(BITS-1));
+	    ZEROIFY(ush, tab_prefix1, 1L<<(BITS-1));
+#endif
+
 	    treat_file(argv[optind++]);
 	}
     } else {  /* Standard input */
Index: trunk/gzip.h
===================================================================
--- trunk.orig/gzip.h
+++ trunk/gzip.h
@@ -119,11 +119,13 @@
       array = (type*)fcalloc((size_t)(((size)+1L)/2), 2*sizeof(type)); \
       if (!array) xalloc_die (); \
    }
+#  define ZEROIFY(type, array, size) memset(array, 0, (size_t)(((size)+1L)/2)*2*sizeof(type))
 #  define FREE(array) {if (array != NULL) fcfree(array), array=NULL;}
 #else
 #  define EXTERN(type, array)  extern type array[]
 #  define DECLARE(type, array, size)  type array[size]
 #  define ALLOC(type, array, size)
+#  define ZEROIFY(type, array, size) { for (int i=0; i<size; i++) { array[i] = 0; } }
 #  define FREE(array)
 #endif
 
